@model ERPCore.ViewModels.EmployeeViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <div class="col-md-7">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            if (Model.Employee != null)
            {
                @Html.HiddenFor(model => model.Employee.Id);
                @Html.HiddenFor(model => model.Employee.Address.Id);
            }

            <h2>Employee</h2>
            <hr />

            <div class="" id="alert" role="alert">
                @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
            </div>

            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.FirstName, htmlAttributes: new { @class = "control-label", id = "fname" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.Employee.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.LastName, htmlAttributes: new { @class = "control-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.Employee.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Employee.Email, htmlAttributes: new { @class = "control-label" })
                <span class="text-danger">*</span>
                @Html.EditorFor(model => model.Employee.Email, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Employee.Age, htmlAttributes: new { @class = "control-label" })
                <span class="text-danger">*</span>
                @Html.EditorFor(model => model.Employee.Age, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Employee.Gender, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Employee.Gender, Html.GetEnumSelectList<Gender>(), "Gender", htmlAttributes: new { @class = "form-control" })
            </div>

            <div class="form-group">
                <label for="">Department</label> <br />
                @Html.ListBoxFor(model => model.SelectedDepartments, Model.AllDepartments, htmlAttributes: new { @class = "form-control" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Employee.Address.Address1, htmlAttributes: new { @class = "control-label" })
                <span class="text-danger">*</span>
                @Html.EditorFor(model => model.Employee.Address.Address1, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Employee.Address.Address2, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Employee.Address.Address2, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div class="row">

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.Address.State, htmlAttributes: new { @class = "control-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.Employee.Address.State, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.Address.City, htmlAttributes: new { @class = "control-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.Employee.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Employee.Address.Zip, htmlAttributes: new { @class = "control-label" })
                        <span class="text-danger">*</span>
                        @Html.EditorFor(model => model.Employee.Address.Zip, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>

            <hr />
            if (Model.Employee is null)
            {
                <div class="form-group float-right">
                    <input type="submit" value="Create" onclick="goToTop()" class="btn btn-outline-primary" />
                </div>
            }
            else
            {
                <div class="form-group float-right">
                    <input type="submit" value="Update" onclick="goToTop()" class="btn btn-outline-primary" />
                </div>
            }
        }
    </div>
<div>
    @Html.ActionLink("« Back to List", "Index", "Employee", htmlAttributes: new { @class = "mx-3" })
</div>

<div class="loading" id="loading">
    <div class="center">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function goToTop() {
            $("#fname").focus();
            $("html, body").animate({ scrollTop: 0 }, "slow");
        }
    </script>
}
